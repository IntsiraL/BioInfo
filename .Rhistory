f <- getwd()
class(f)
j <- paste(f,"/data")
j
rm(list = ls())
dir()
bgxfile=paste(idatfilesPath,"/Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
library(limma)
library(illuminaio)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo")
idatfilesPath<-getwd()
idatFiles44 <- list.files(paste(idatfilesPath,"/Data/200729890044/",sep = ""),all.files=FALSE,pattern=".idat")
idatFiles64 <- list.files(paste(idatfilesPath,"/Data/200796240064/",sep = ""),all.files=FALSE,pattern=".idat")
bgxfile=paste(idatfilesPath,"/Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
print(idatFiles64)
print(idatFiles44)
print(bgxfile)
class(idatFiles64)
idatFiles44[1]
idatFiles44[2]
rm(list = ls())
library(limma)
library(illuminaio)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo")
idatfilesPath<-getwd()
idatFiles44 <- list.files(paste(idatfilesPath,"/Data/200729890044/",sep = ""),all.files=FALSE,pattern=".idat")
idatFiles64 <- list.files(paste(idatfilesPath,"/Data/200796240064/",sep = ""),all.files=FALSE,pattern=".idat")
bgxfile=paste(idatfilesPath,"/Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
#lectures des fichiers idat par ordre alphabétique des noms des fichiers
obj<-read.idat(idatFiles44, bgxfile, dateinfo=TRUE,annotation = "Symbol",tolerance=0L, verbose = TRUE)
rm(list = ls())
library(limma)
library(illuminaio)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo")
idatfilesPath<-getwd()
idatFiles44 <- list.files(paste(idatfilesPath,"/Data/200729890044/",sep = ""),all.files=FALSE,pattern=".idat")
idatFiles64 <- list.files(paste(idatfilesPath,"/Data/200796240064/",sep = ""),all.files=FALSE,pattern=".idat")
bgxfile=paste(idatfilesPath,"/Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
#lectures des fichiers idat par ordre alphabétique des noms des fichiers
obj<-read.idat(idatFiles44, bgxfile, dateinfo=TRUE,annotation = "Symbol",tolerance=0L, verbose = TRUE)
rm(list = ls())
library(limma)
library(illuminaio)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo")
idatfilesPath<-getwd()
idatFiles44 <- list.files(paste(idatfilesPath,"/Data/200729890044/",sep = ""),all.files=FALSE,pattern=".idat")
idatFiles64 <- list.files(paste(idatfilesPath,"/Data/200796240064/",sep = ""),all.files=FALSE,pattern=".idat")
bgxfile=paste(idatfilesPath,"/Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
#lectures des fichiers idat par ordre alphabétique des noms des fichiers
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo/Data/200729890044/")
obj<-read.idat(idatFiles44, bgxfile, dateinfo=TRUE,annotation = "Symbol",tolerance=0L, verbose = TRUE)
View(obj$genes)
View(obj$E)
rm(list = ls())
library(limma)
library(illuminaio)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo")
idatfilesPath<-getwd()
idatFiles44 <- list.files(paste(idatfilesPath,"/Data/200729890044/",sep = ""),all.files=FALSE,pattern=".idat")
idatFiles64 <- list.files(paste(idatfilesPath,"/Data/200796240064/",sep = ""),all.files=FALSE,pattern=".idat")
bgxfile=paste(idatfilesPath,"/Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
#lectures des fichiers idat par ordre alphabétique des noms des fichiers
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo/Data/200729890044/")
obj<-read.idat(idatFiles44, bgxfile, dateinfo=TRUE,annotation = "Symbol",tolerance=0L, verbose = TRUE)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo/Data/200796240064/")
obj<-read.idat(idatFiles64, bgxfile, dateinfo=TRUE,annotation = "Symbol",tolerance=0L, verbose = TRUE)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo")
View(obj$E)
for (i in idatFiles44){
print(i)
}
class(idatFiles44)
is (idatFiles44)
for (i in idatFiles44){
idatFile <- c(idatFile,paste(idatfilesPath,"/Data/200729890044/",i,sep = ""))
}
idatFile = c()
for (i in idatFiles44){
idatFile <- c(idatFile,paste(idatfilesPath,"/Data/200729890044/",i,sep = ""))
}
idatFile
rm(list = ls())
library(limma)
library(illuminaio)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo")
idatfilesPath<-getwd()
idatFiles44 <- list.files(paste(idatfilesPath,"/Data/200729890044/",sep = ""),all.files=FALSE,pattern=".idat")
idatFiles64 <- list.files(paste(idatfilesPath,"/Data/200796240064/",sep = ""),all.files=FALSE,pattern=".idat")
bgxfile=paste(idatfilesPath,"/Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
idatFiles = c()
for (i in idatFiles44){
idatFiles <- c(idatFiles,paste(idatfilesPath,"/Data/200729890044/",i,sep = ""))
}
for (i in idatFiles64){
idatFiles <- c(idatFiles,paste(idatfilesPath,"/Data/200796240064/",i,sep = ""))
}
#lectures des fichiers idat par ordre alphabétique des noms des fichiers
obj<-read.idat(idatFiles, bgxfile, dateinfo=TRUE,annotation = "Symbol",tolerance=0L, verbose = TRUE)
View(obj$E)
is(obj$E)
dim(obj$E)
colnames(obj$E)
nameCol <- c("P1_G_Co","P1_M_AL","P1_G_LPS","P1_G_AL_LPS","P1_M_Co","P1_G_AL","P1_M_LPS","P1_M_AL_LPS")
for (j in 1:4){
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P2","G",i,sep = "_"))
}
}
for (j in 1:4){
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P2","M",i,sep = "_"))
}
}
for (j in 1:4){
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P3","G",i,sep = "_"))
}
}
for (j in 1:4){
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P3","M",i,sep = "_"))
}
}
print(nameCol)
rm(nameCol)
nameCol <- c("P1_G_Co","P1_M_AL","P1_G_LPS","P1_G_AL_LPS","P1_M_Co","P1_G_AL","P1_M_LPS","P1_M_AL_LPS")
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P2","G",i,sep = "_"))
}
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P2","M",i,sep = "_"))
}
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P3","G",i,sep = "_"))
}
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P3","M",i,sep = "_"))
}
print(nameCol)
rm(list = ls())
library(limma)
library(illuminaio)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo")
idatfilesPath<-getwd()
idatFiles44 <- list.files(paste(idatfilesPath,"/Data/200729890044/",sep = ""),all.files=FALSE,pattern=".idat")
idatFiles64 <- list.files(paste(idatfilesPath,"/Data/200796240064/",sep = ""),all.files=FALSE,pattern=".idat")
bgxfile=paste(idatfilesPath,"/Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
idatFiles = c()
for (i in idatFiles44){
idatFiles <- c(idatFiles,paste(idatfilesPath,"/Data/200729890044/",i,sep = ""))
}
for (i in idatFiles64){
idatFiles <- c(idatFiles,paste(idatfilesPath,"/Data/200796240064/",i,sep = ""))
}
#lectures des fichiers idat par ordre alphabétique des noms des fichiers
obj<-read.idat(idatFiles, bgxfile, dateinfo=TRUE,annotation = "Symbol",tolerance=0L, verbose = TRUE)
#renomer les colonnes de la matrice des intensités
nameCol <- c("P1_G_Co","P1_M_AL","P1_G_LPS","P1_G_AL_LPS","P1_M_Co","P1_G_AL","P1_M_LPS","P1_M_AL_LPS")
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P2","G",i,sep = "_"))
}
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P2","M",i,sep = "_"))
}
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P3","G",i,sep = "_"))
}
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P3","M",i,sep = "_"))
}
colnames(obj$E) <- nameCol
#View(obj$targets)
#View(obj$E)
#View(obj$genes)
#View(obj$other$NumBeads)
#View(obj$other$STDEV)
#d = readIDAT(idatFiles)
#print(d)
View(obj$genes)
View(obj$E)
colnames(obj$other$NumBeads)
colnames(obj$other$STDEV)
rm(list = ls())
library(limma)
library(illuminaio)
setwd("/home/intsira/Documents/BioInfo-Clustering/BioInfo")
idatfilesPath<-getwd()
idatFiles44 <- list.files(paste(idatfilesPath,"/Data/200729890044/",sep = ""),all.files=FALSE,pattern=".idat")
idatFiles64 <- list.files(paste(idatfilesPath,"/Data/200796240064/",sep = ""),all.files=FALSE,pattern=".idat")
bgxfile=paste(idatfilesPath,"/Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
idatFiles = c()
for (i in idatFiles44){
idatFiles <- c(idatFiles,paste(idatfilesPath,"/Data/200729890044/",i,sep = ""))
}
for (i in idatFiles64){
idatFiles <- c(idatFiles,paste(idatfilesPath,"/Data/200796240064/",i,sep = ""))
}
#lectures des fichiers idat par ordre alphabétique des noms des fichiers
obj<-read.idat(idatFiles, bgxfile, dateinfo=TRUE,annotation = "Symbol",tolerance=0L, verbose = TRUE)
#renomer les colonnes de la matrice des intensités
nameCol <- c("P1_G_Co","P1_M_AL","P1_G_LPS","P1_G_AL_LPS","P1_M_Co","P1_G_AL","P1_M_LPS","P1_M_AL_LPS")
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P2","G",i,sep = "_"))
}
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P2","M",i,sep = "_"))
}
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P3","G",i,sep = "_"))
}
for (i in c("Co","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P3","M",i,sep = "_"))
}
colnames(obj$E) <- nameCol
colnames(obj$other$NumBeads) <- nameCol
colnames(obj$other$STDEV) <- nameCol
View(obj$targets)
View(obj$E)
View(obj$genes)
View(obj$other$NumBeads)
View(obj$other$STDEV)
#d = readIDAT(idatFiles)
#print(d)
summary(obj$E)
print(obj$E)
names(obj)
print(obj$source)
mydata <- readIDAT(idatFiles)
mydata <- readIDAT(idatFiles[0])
idatFiles[0]
idatFiles[1]
mydata <- readIDAT(idatFiles[1])
names(mydata)
rm(mydata)
mydata = list()
for (i in 1:24){
mydata[nameCol[i]] <- readIDAT(idatFiles[i])
}
warnings()
names(mydata)
mydata$P1_G_Co
names(mydata$P1_G_Co)
rm(mydata)
for (i in 1:24){
print(idatFiles[i])
}
for (i in 1:24){
my <- readIDAT(idatFiles[i])
}
is(obj)
rm(my)
mydata = list()
for (i in 1:24){
mydata[[nameCol[i]]] <- readIDAT(idatFiles[i])
}
names(mydata)
is(mydata)
mydata$P1_G_Co
pdf <- pipe("a2ps -o - | ps2pdf - tempout.pdf", "w")
sink("/Data/P1_G_Co.txt")
sink("Data/P1_G_Co.txt")
print(mydata$P1_G_Co)
sink()
sink("Data/P1_G_Co(limma).txt")
print(obj$E[,"P1_G_Co"])
sink()
print(obj$E[,"P1_G_Co"])
print(obj$E[,"P1_G_Co"])
View(mydata$P1_G_Co$Quants)
tab <- neqc(obj,offset = 13)
View(tab$E)
tab$E[3450719,"P1_G_Co"]
tab$E[29165,"P1_G_Co"]
tab$E[1690056,"P1_G_Co"]
rownames(tab$E)
tab$E["5270161","P1_G_Co"]
tab$E[5270161,"P1_G_Co"]
rm(tab)
tab <- neqc(obj,offset = 16)
tab$E["5270161","P1_G_Co"]
plotDensities(tab)
plotMD(tab)
#library(limma)
#library(illuminaio)
#######################################################################################################
#######################################################################################################
############################## LECTURE DES FICHIERS IDATS
#######################################################################################################
#######################################################################################################
require(limma)
idatfilesPath<-getwd()
idatFiles44 <- list.files(paste(idatfilesPath,"/../Data/200729890044/",sep = ""),all.files=FALSE,pattern=".idat")
idatFiles64 <- list.files(paste(idatfilesPath,"/../Data/200796240064/",sep = ""),all.files=FALSE,pattern=".idat")
bgxfile=paste(idatfilesPath,"/../Data/HumanHT-12_V4_0_R2_15002873_B.bgx",sep = "")
controlProfil  <- read.table(paste(idatfilesPath,"/../Data/controlProfil.txt",sep = ""), sep = "\t", header = TRUE ,as.is = TRUE)
idatFiles = c()
for (i in idatFiles44){
idatFiles <- c(idatFiles,paste(idatfilesPath,"/../Data/200729890044/",i,sep = ""))
}
for (i in idatFiles64){
idatFiles <- c(idatFiles,paste(idatfilesPath,"/../Data/200796240064/",i,sep = ""))
}
#lectures des fichiers idat par ordre alphabétique des noms des fichiers avec read.idat de limma
obj<-read.idat(idatFiles, bgxfile, dateinfo=TRUE,annotation = "Symbol",tolerance=0L, verbose = TRUE)
#renommer les colonnes de la matrice des intensités
nameCol <- c("P1_G","P1_MAL","P1_GLPS","P1_GALLPS","P1_M","P1_GAL","P1_MLPS","P1_MALLPS")
for (i in c("","AL","LPS","ALLPS")){
nameCol <- c(nameCol, paste("P2_G",i,sep = ""))
}
for (i in c("","AL","LPS","ALLPS")){
nameCol <- c(nameCol, paste("P2_M",i,sep = ""))
}
for (i in c("","AL","LPS","AL_LPS")){
nameCol <- c(nameCol, paste("P3_G",i,sep = ""))
}
for (i in c("","AL","LPS","ALLPS")){
nameCol <- c(nameCol, paste("P3_M",i,sep = ""))
}
colnames(obj$E) <- nameCol
colnames(obj$other$NumBeads) <- nameCol
colnames(obj$other$STDEV) <- nameCol
#Contrôle de p-values
obj$genes$DetectionPValue <- detectionPValues(obj)
#décryptage des fichier idat avec illuminao
#mydata = list()
#for (i in 1:24){
#  mydata[[nameCol[i]]] <- readIDAT(idatFiles[i])
#}
#targetData <- readTargets(file = "../Data/Annot.txt")
###############################################################################
## Control Data                                                              ##
###############################################################################
# source(file = "qa_metrics.R")
controlData <- obj[obj$genes$Status != "regular",]
bruteData <- obj[obj$genes$Status == "regular",]
source(file = "controlData.R")
# #estimation de proportion des sondes exprimées
# plot(propexpr(obj),type = "b", main = "Estimation de proportion des sondes exprimées",ylab = "",xlab = "")
# axis(1,1:24,nameCol , las = 2)
# abline(v=12.5, col="red")
###############################################################################
## Preprocessing Transformation Normalization Filtrage                                                              ##
###############################################################################
#correction de bruit de fond et normalisaion (par quantille) avec neqc (ajustement des paramètres au fur et à mesure)
# à tester la fonction backgroundCorrect()
dCorect <- neqc(obj)
# plotMD(obj)
# plotMD(dCorect)
# plotDensities(obj$E[,1:8],legend = "topright",main = "Densité de la population 1 avant la normalisation")
# plotDensities(dCorect$E[,1:8],legend = "topright",main = "Densité de la population 1 après la normalisation")
# boxplot(dCorect$E[,1:8],main="Box plot des signaux de la population 1 après normalisation", las=2)
################################
# Calcul des moyennes des P-Values
################################
# tab = c()
# for(i in c(1:nrow(dCorect$E))){
#   tab <- c(tab,mean(dCorect$genes$DetectionPValue[i,1:8]))
# }
# dCorect$genes$mPValuePop1 <- matrix(tab,nrow = nrow(dCorect$E), ncol = 1)
# tab = c()
# for(i in c(1:nrow(dCorect$E))){
#   tab <- c(tab,mean(dCorect$genes$DetectionPValue[i,9:16]))
# }
# dCorect$genes$mPValuePop2 <- matrix(tab,nrow = nrow(dCorect$E), ncol = 1)
# tab = c()
# for(i in c(1:nrow(dCorect$E))){
#   tab <- c(tab,mean(dCorect$genes$DetectionPValue[i,17:24]))
# }
# dCorect$genes$mPValuePop3 <- matrix(tab,nrow = nrow(dCorect$E), ncol = 1)
# boxplot(dCorect$genes$mPValuePop1)
# abline(h=0.01, col="red")
# abline(h=0.05, col="red")
################################
# Analyse différentielle regression linéaire
################################
#tester la relation entre var
summary(lm(formula = P1_GAL ~ P1_G,data=as.data.frame(dCorect$E[,c("P1_GAL","P1_G")])))
summary(lm(formula = P1_M ~ P1_G,data=as.data.frame(dCorect$E[,c("P1_M","P1_G")])))
#P1_G vs P1_GAL
design <- model.matrix(~1+nameCol)
colnames(design) <- nameCol
contMatrix <- makeContrasts(GvsGAL=P1_G-P1_GAL,MvsG=P1_M-P1_G,levels = design)
fit <- lmFit(dCorect, design)
fitC <- contrasts.fit(fit, contMatrix)
fitC <- eBayes(fitC)
designGvsGAL <- cbind(G=as.numeric(nameCol == "P1_G"),GAL=as.numeric(nameCol == "P1_GAL"))
p1GvsGAL <- lmFit(dCorect,designGvsGAL)
p1GvsGAL <- eBayes(p1GvsGAL)
resultat1 <- toptable(p1GvsGAL,number = nrow(dCorect))
design2GvsGAL <- cbind(G=as.numeric(nameCol == "P2_G"),GAL=as.numeric(nameCol == "P2_GAL"))
p2GvsGAL <- lmFit(dCorect,design2GvsGAL)
p2GvsGAL <- eBayes(p2GvsGAL)
resultat2 <- toptable(p2GvsGAL,number = nrow(dCorect))
design3GvsGAL <- cbind(G=as.numeric(nameCol == "P3_G"),GAL=as.numeric(nameCol == "P3_GAL"))
p3GvsGAL <- lmFit(dCorect,design3GvsGAL)
p3GvsGAL <- eBayes(p3GvsGAL)
resultat3 <- toptable(p3GvsGAL,number = nrow(dCorect))
View(obj$E)
barplot(propexpr(obj))
